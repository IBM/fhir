name: Rebuild

on:
  schedule:
    # 7am (UTC) each tuesday
    # '*' is a special character in YAML so you have to quote this string
    - cron:  '0 7 * * TUE'
  # allows the workflow to be manually executed any time
  workflow_dispatch:

permissions:
  packages: write

jobs:
  ghcr:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '11' ]
        tag: [ '5.0.0-RC2' ]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
      with:
        ref: refs/tags/${{ matrix.tag }}
    - name: Setup java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}
        cache: 'maven'
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Release
      env:
        BASE: origin/${{ github['base_ref'] }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_KEY_FILE: ${{ secrets.GPG_KEY_FILE }}
      run: |
        # set GITHUB_REF so we can use the same logic we use for our tag-push release
        export GITHUB_REF=refs/tags/${{ matrix.tag }}
        . build/release/global.sh
        bash build/release/00_prep.sh
        bash build/release/10_build.sh
        bash build/release/20_test.sh
        # go straight to the docker release instead of calling 30_release.sh
        # which uploads the build artifacts to Sonatype OSSRH in the tag release workflow
        bash build/release/bin/30_release/1_docker.sh
        bash build/release/40_drop.sh
  dockerhub:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '11' ]
        tag: [ '4.11.1' ]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
      with:
        ref: refs/tags/${{ matrix.tag }}
    - name: Setup java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}
        cache: 'maven'
    - name: Build and Release
      env:
        BASE: origin/${{ github['base_ref'] }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        GPG_KEYNAME: ${{ secrets.GPG_KEYNAME }}
        GPG_KEY_FILE: ${{ secrets.GPG_KEY_FILE }}
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      run: |
        # set GITHUB_REF so we can use the same logic we use for our tag-push release
        export GITHUB_REF=refs/tags/${{ matrix.tag }}
        . build/release/global.sh
        bash build/release/00_prep.sh
        bash build/release/10_build.sh
        bash build/release/20_test.sh
        # go straight to the dockerhub release instead of calling 30_release.sh
        # which uploads the build artifacts to Sonatype OSSRH in the tag release workflow
        bash build/release/bin/30_release/1_dockerhub.sh
        bash build/release/40_drop.sh
