version: '3.8'
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    env_file:
      - ./.zookeeper-1.env
    domainname: fhir.dev
    networks:
      - fhir
  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    env_file:
      - ./.zookeeper-2.env
    domainname: fhir.dev
    networks:
      - fhir
  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    volumes:
      - ./resources:/etc/kafka/secrets
      - ./workarea/output:/output
    env_file:
      - ./.kafka-1.env
    domainname: fhir.dev
    networks:
      - fhir
    stdin_open: false
    tty: false
    ports:
      - 19092:19092
      - 29094:29094
  kafka-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    volumes:
      - ./resources:/etc/kafka/secrets
      - ./workarea/output:/output
    env_file:
      - ./.kafka-2.env
    domainname: fhir.dev
    networks:
       - fhir
    stdin_open: false
    tty: false
    ports:
      - 39096:39096
      - 49098:49098
  fhir-server:
    image: linuxforhealth/fhir-server:latest
    depends_on:
      - kafka-1
      - kafka-2
    hostname: fhir
    volumes:
      - type: bind
        source: ./workarea/volumes/dist/config
        target: /opt/ol/wlp/usr/servers/defaultServer/config
        read_only: true
      - type: bind
        source: ./workarea/volumes/dist/overrides
        target: /opt/ol/wlp/usr/servers/defaultServer/configDropins/overrides
        read_only: true
      - type: bind
        source: ./workarea/volumes/dist/userlib/
        target: /opt/ol/wlp/usr/servers/defaultServer/userlib
        read_only: true
    environment:
      - BOOTSTRAP_DB=true
    command: bash -c "
        java -jar /opt/fhir-server/tools/fhir-persistence-schema-*-cli.jar
          --db-type derby --prop db.database=/output/derby/profile --prop db.create=Y
          --prop resourceTypes=${TENANT1_PROFILE_RESOURCE_TYPES}
          --update-schema &&
        java -jar /opt/fhir-server/tools/fhir-persistence-schema-*-cli.jar
          --db-type derby --prop db.database=/output/derby/reference --prop db.create=Y
          --prop resourceTypes=${TENANT1_REFERENCE_RESOURCE_TYPES}
          --update-schema &&
        java -jar /opt/fhir-server/tools/fhir-persistence-schema-*-cli.jar
          --db-type derby --prop db.database=/output/derby/study1 --prop db.create=Y
          --prop resourceTypes=${TENANT1_STUDY1_RESOURCE_TYPES}
          --update-schema &&
        /opt/ol/wlp/bin/server run"
    healthcheck:
      start_period: 120s
      interval: 10s
      timeout: 10s
      retries: 2
      test: curl --max-time 5 -v -f -k -u 'fhiruser:change-password' 'https://localhost:9443/fhir-server/api/v4/$$healthcheck'
    ports:
      - 9443:9443
    env_file:
      - ./.fhir.env
    networks:
      - fhir
  fhir-bulkdata-server:
    image: linuxforhealth/fhir-bulkdata-server:latest
    hostname: fhir-bulkdata
    volumes:
      - type: bind
        source: ./fhir/config
        target: /opt/ol/wlp/usr/servers/defaultServer/config
        read_only: true
      - type: bind
        source: ./fhir/configDropins/overrides
        target: /opt/ol/wlp/usr/servers/defaultServer/configDropins/overrides
        read_only: true
      - type: bind
        source: ./fhir/userlib
        target: /opt/ol/wlp/usr/servers/defaultServer/userlib
        read_only: true
      - type: bind
        source: ./fhir/openapi.json
        target: /opt/ol/wlp/usr/servers/defaultServer/apps/expanded/fhir-openapi.war/META-INF/openapi.json
        read_only: true
      - type: bind
        source: ./bulkdata
        target: /output/bulkdata
    environment:
      TRACE_SPEC: "org.linuxforhealth.fhir.*=FINE"
      TRACE_FILE: "stdout"
    command: bash -c "/opt/ol/wlp/bin/server run"
    healthcheck:
      start_period: 32s
      interval: 30s
      timeout: 5s
      retries: 3
      # https://docs.docker.com/compose/compose-file/#variable-substitution
      test: curl --fail -k -u 'fhiruser:change-password' 'https://localhost:8443/fhir-bulkdata-server/api/v4/healthcheck'
    ports:
      - 8080:8080
      - 8443:8443
    depends_on:
      postgres:
        condition: service_healthy
networks:
  fhir:
    driver: bridge
